# Copyright (c) 2021, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the HISP project nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
---
  name: names_multiple_spaces
  description: Names of identifiable objects which have multiple spaces.
  section: General
  section_order: 3
  summary_uid: Vkx3c5BOSJd
  summary_sql: >-
    WITH names_multiple_spaces AS (
    SELECT 'attribute' AS table_name, name from attribute WHERE name ~'\s{2,}'  UNION
    SELECT 'categorycombo' AS table_name, name from categorycombo WHERE name ~'\s{2,}'  UNION
    SELECT 'categoryoptioncombo' AS table_name, name from categoryoptioncombo WHERE name ~'\s{2,}'  UNION
    SELECT 'categoryoptiongroup' AS table_name, name from categoryoptiongroup WHERE name ~'\s{2,}'  UNION
    SELECT 'categoryoptiongroupset' AS table_name, name from categoryoptiongroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'chart' AS table_name, name from chart WHERE name ~'\s{2,}'  UNION
    SELECT 'concept' AS table_name, name from concept WHERE name ~'\s{2,}'  UNION
    SELECT 'constant' AS table_name, name from constant WHERE name ~'\s{2,}'  UNION
    SELECT 'dashboard' AS table_name, name from dashboard WHERE name ~'\s{2,}'  UNION
    SELECT 'dataapprovallevel' AS table_name, name from dataapprovallevel WHERE name ~'\s{2,}'  UNION
    SELECT 'dataapprovalworkflow' AS table_name, name from dataapprovalworkflow WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelement' AS table_name, name from dataelement WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementcategory' AS table_name, name from dataelementcategory WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementcategoryoption' AS table_name, name from dataelementcategoryoption WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementgroup' AS table_name, name from dataelementgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementgroupset' AS table_name, name from dataelementgroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'dataentryform' AS table_name, name from dataentryform WHERE name ~'\s{2,}'  UNION
    SELECT 'dataset' AS table_name, name from dataset WHERE name ~'\s{2,}'  UNION
    SELECT 'datasetnotificationtemplate' AS table_name, name from datasetnotificationtemplate WHERE name ~'\s{2,}'  UNION
    SELECT 'document' AS table_name, name from document WHERE name ~'\s{2,}'  UNION
    SELECT 'eventchart' AS table_name, name from eventchart WHERE name ~'\s{2,}'  UNION
    SELECT 'eventreport' AS table_name, name from eventreport WHERE name ~'\s{2,}'  UNION
    SELECT 'externalmaplayer' AS table_name, name from externalmaplayer WHERE name ~'\s{2,}'  UNION
    SELECT 'fileresource' AS table_name, name from fileresource WHERE name ~'\s{2,}'  UNION
    SELECT 'i18nlocale' AS table_name, name from i18nlocale WHERE name ~'\s{2,}'  UNION
    SELECT 'indicator' AS table_name, name from indicator WHERE name ~'\s{2,}'  UNION
    SELECT 'indicatorgroup' AS table_name, name from indicatorgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'indicatorgroupset' AS table_name, name from indicatorgroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'indicatortype' AS table_name, name from indicatortype WHERE name ~'\s{2,}'  UNION
    SELECT 'jobconfiguration' AS table_name, name from jobconfiguration WHERE name ~'\s{2,}'  UNION
    SELECT 'map' AS table_name, name from map WHERE name ~'\s{2,}'  UNION
    SELECT 'maplayer' AS table_name, name from maplayer WHERE name ~'\s{2,}'  UNION
    SELECT 'maplegend' AS table_name, name from maplegend WHERE name ~'\s{2,}'  UNION
    SELECT 'maplegendset' AS table_name, name from maplegendset WHERE name ~'\s{2,}'  UNION
    SELECT 'metadatafilter' AS table_name, name from metadatafilter WHERE name ~'\s{2,}'  UNION
    SELECT 'metadataversion' AS table_name, name from metadataversion WHERE name ~'\s{2,}'  UNION
    SELECT 'optiongroup' AS table_name, name from optiongroup WHERE name ~'\s{2,}'  UNION
    SELECT 'optiongroupset' AS table_name, name from optiongroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'optionset' AS table_name, name from optionset WHERE name ~'\s{2,}'  UNION
    SELECT 'optionvalue' AS table_name, name from optionvalue WHERE name ~'\s{2,}'  UNION
    SELECT 'organisationunit' AS table_name, name from organisationunit WHERE name ~'\s{2,}'  UNION
    SELECT 'orgunitgroup' AS table_name, name from orgunitgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'orgunitgroupset' AS table_name, name from orgunitgroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'orgunitlevel' AS table_name, name from orgunitlevel WHERE name ~'\s{2,}'  UNION
    SELECT 'periodtype' AS table_name, name from periodtype WHERE name ~'\s{2,}'  UNION
    SELECT 'predictor' AS table_name, name from predictor WHERE name ~'\s{2,}'  UNION
    SELECT 'predictorgroup' AS table_name, name from predictorgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'program' AS table_name, name from program WHERE name ~'\s{2,}'  UNION
    SELECT 'program_attribute_group' AS table_name, name from program_attribute_group WHERE name ~'\s{2,}'  UNION
    SELECT 'programindicator' AS table_name, name from programindicator WHERE name ~'\s{2,}'  UNION
    SELECT 'programindicatorgroup' AS table_name, name from programindicatorgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'programnotificationinstance' AS table_name, name from programnotificationinstance WHERE name ~'\s{2,}'  UNION
    SELECT 'programnotificationtemplate' AS table_name, name from programnotificationtemplate WHERE name ~'\s{2,}'  UNION
    SELECT 'programrule' AS table_name, name from programrule WHERE name ~'\s{2,}'  UNION
    SELECT 'programrulevariable' AS table_name, name from programrulevariable WHERE name ~'\s{2,}'  UNION
    SELECT 'programsection' AS table_name, name from programsection WHERE name ~'\s{2,}'  UNION
    SELECT 'programstage' AS table_name, name from programstage WHERE name ~'\s{2,}'  UNION
    SELECT 'programstageinstancefilter' AS table_name, name from programstageinstancefilter WHERE name ~'\s{2,}'  UNION
    SELECT 'programstagesection' AS table_name, name from programstagesection WHERE name ~'\s{2,}'  UNION
    SELECT 'programvalidation' AS table_name, name from programvalidation WHERE name ~'\s{2,}'  UNION
    SELECT 'pushanalysis' AS table_name, name from pushanalysis WHERE name ~'\s{2,}'  UNION
    SELECT 'relationshiptype' AS table_name, name from relationshiptype WHERE name ~'\s{2,}'  UNION
    SELECT 'report' AS table_name, name from report WHERE name ~'\s{2,}'  UNION
    SELECT 'reporttable' AS table_name, name from reporttable WHERE name ~'\s{2,}'  UNION
    SELECT 'section' AS table_name, name from section WHERE name ~'\s{2,}'  UNION
    SELECT 'smscommands' AS table_name, name from smscommands WHERE name ~'\s{2,}'  UNION
    SELECT 'smsspecialcharacter' AS table_name, name from smsspecialcharacter WHERE name ~'\s{2,}'  UNION
    SELECT 'sqlview' AS table_name, name from sqlview WHERE name ~'\s{2,}'  UNION
    SELECT 'systemsetting' AS table_name, name from systemsetting WHERE name ~'\s{2,}'  UNION
    SELECT 'tablehook' AS table_name, name from tablehook WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentityattributegroup' AS table_name, name from trackedentityattributegroup WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentityinstancefilter' AS table_name, name from trackedentityinstancefilter WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentityinstancereminder' AS table_name, name from trackedentityinstancereminder WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentitytype' AS table_name, name from trackedentitytype WHERE name ~'\s{2,}'  UNION
    SELECT 'usergroup' AS table_name, name from usergroup WHERE name ~'\s{2,}'  UNION
    SELECT 'userrole' AS table_name, name from userrole WHERE name ~'\s{2,}'  UNION
    SELECT 'usersetting' AS table_name, name from usersetting WHERE name ~'\s{2,}'  UNION
    SELECT 'validationcriteria' AS table_name, name from validationcriteria WHERE name ~'\s{2,}'  UNION
    SELECT 'validationnotificationtemplate' AS table_name, name from validationnotificationtemplate WHERE name ~'\s{2,}'  UNION
    SELECT 'validationrule' AS table_name, name from validationrule WHERE name ~'\s{2,}'  UNION
    SELECT 'validationrulegroup' AS table_name, name from validationrulegroup WHERE name ~'\s{2,}'  UNION
    SELECT 'visualization' AS table_name, name from visualization WHERE name ~'\s{2,}')
    SELECT 'names_multiple_spaces' as indicator,
    COUNT(*)::varchar as value,
    '-'::varchar as percent,
    'Object names which have multiple spaces' as description
    from names_multiple_spaces;
  details_uid: evDSyoZdiIH
  details_sql: >-
    WITH names_multiple_spaces as (
    SELECT 'attribute' AS table_name, name from attribute WHERE name ~'\s{2,}'  UNION
    SELECT 'categorycombo' AS table_name, name from categorycombo WHERE name ~'\s{2,}'  UNION
    SELECT 'categoryoptioncombo' AS table_name, name from categoryoptioncombo WHERE name ~'\s{2,}'  UNION
    SELECT 'categoryoptiongroup' AS table_name, name from categoryoptiongroup WHERE name ~'\s{2,}'  UNION
    SELECT 'categoryoptiongroupset' AS table_name, name from categoryoptiongroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'chart' AS table_name, name from chart WHERE name ~'\s{2,}'  UNION
    SELECT 'concept' AS table_name, name from concept WHERE name ~'\s{2,}'  UNION
    SELECT 'constant' AS table_name, name from constant WHERE name ~'\s{2,}'  UNION
    SELECT 'dashboard' AS table_name, name from dashboard WHERE name ~'\s{2,}'  UNION
    SELECT 'dataapprovallevel' AS table_name, name from dataapprovallevel WHERE name ~'\s{2,}'  UNION
    SELECT 'dataapprovalworkflow' AS table_name, name from dataapprovalworkflow WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelement' AS table_name, name from dataelement WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementcategory' AS table_name, name from dataelementcategory WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementcategoryoption' AS table_name, name from dataelementcategoryoption WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementgroup' AS table_name, name from dataelementgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'dataelementgroupset' AS table_name, name from dataelementgroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'dataentryform' AS table_name, name from dataentryform WHERE name ~'\s{2,}'  UNION
    SELECT 'dataset' AS table_name, name from dataset WHERE name ~'\s{2,}'  UNION
    SELECT 'datasetnotificationtemplate' AS table_name, name from datasetnotificationtemplate WHERE name ~'\s{2,}'  UNION
    SELECT 'document' AS table_name, name from document WHERE name ~'\s{2,}'  UNION
    SELECT 'eventchart' AS table_name, name from eventchart WHERE name ~'\s{2,}'  UNION
    SELECT 'eventreport' AS table_name, name from eventreport WHERE name ~'\s{2,}'  UNION
    SELECT 'externalmaplayer' AS table_name, name from externalmaplayer WHERE name ~'\s{2,}'  UNION
    SELECT 'fileresource' AS table_name, name from fileresource WHERE name ~'\s{2,}'  UNION
    SELECT 'i18nlocale' AS table_name, name from i18nlocale WHERE name ~'\s{2,}'  UNION
    SELECT 'indicator' AS table_name, name from indicator WHERE name ~'\s{2,}'  UNION
    SELECT 'indicatorgroup' AS table_name, name from indicatorgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'indicatorgroupset' AS table_name, name from indicatorgroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'indicatortype' AS table_name, name from indicatortype WHERE name ~'\s{2,}'  UNION
    SELECT 'jobconfiguration' AS table_name, name from jobconfiguration WHERE name ~'\s{2,}'  UNION
    SELECT 'map' AS table_name, name from map WHERE name ~'\s{2,}'  UNION
    SELECT 'maplayer' AS table_name, name from maplayer WHERE name ~'\s{2,}'  UNION
    SELECT 'maplegend' AS table_name, name from maplegend WHERE name ~'\s{2,}'  UNION
    SELECT 'maplegendset' AS table_name, name from maplegendset WHERE name ~'\s{2,}'  UNION
    SELECT 'metadatafilter' AS table_name, name from metadatafilter WHERE name ~'\s{2,}'  UNION
    SELECT 'metadataversion' AS table_name, name from metadataversion WHERE name ~'\s{2,}'  UNION
    SELECT 'optiongroup' AS table_name, name from optiongroup WHERE name ~'\s{2,}'  UNION
    SELECT 'optiongroupset' AS table_name, name from optiongroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'optionset' AS table_name, name from optionset WHERE name ~'\s{2,}'  UNION
    SELECT 'optionvalue' AS table_name, name from optionvalue WHERE name ~'\s{2,}'  UNION
    SELECT 'organisationunit' AS table_name, name from organisationunit WHERE name ~'\s{2,}'  UNION
    SELECT 'orgunitgroup' AS table_name, name from orgunitgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'orgunitgroupset' AS table_name, name from orgunitgroupset WHERE name ~'\s{2,}'  UNION
    SELECT 'orgunitlevel' AS table_name, name from orgunitlevel WHERE name ~'\s{2,}'  UNION
    SELECT 'periodtype' AS table_name, name from periodtype WHERE name ~'\s{2,}'  UNION
    SELECT 'predictor' AS table_name, name from predictor WHERE name ~'\s{2,}'  UNION
    SELECT 'predictorgroup' AS table_name, name from predictorgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'program' AS table_name, name from program WHERE name ~'\s{2,}'  UNION
    SELECT 'program_attribute_group' AS table_name, name from program_attribute_group WHERE name ~'\s{2,}'  UNION
    SELECT 'programindicator' AS table_name, name from programindicator WHERE name ~'\s{2,}'  UNION
    SELECT 'programindicatorgroup' AS table_name, name from programindicatorgroup WHERE name ~'\s{2,}'  UNION
    SELECT 'programnotificationinstance' AS table_name, name from programnotificationinstance WHERE name ~'\s{2,}'  UNION
    SELECT 'programnotificationtemplate' AS table_name, name from programnotificationtemplate WHERE name ~'\s{2,}'  UNION
    SELECT 'programrule' AS table_name, name from programrule WHERE name ~'\s{2,}'  UNION
    SELECT 'programrulevariable' AS table_name, name from programrulevariable WHERE name ~'\s{2,}'  UNION
    SELECT 'programsection' AS table_name, name from programsection WHERE name ~'\s{2,}'  UNION
    SELECT 'programstage' AS table_name, name from programstage WHERE name ~'\s{2,}'  UNION
    SELECT 'programstageinstancefilter' AS table_name, name from programstageinstancefilter WHERE name ~'\s{2,}'  UNION
    SELECT 'programstagesection' AS table_name, name from programstagesection WHERE name ~'\s{2,}'  UNION
    SELECT 'programvalidation' AS table_name, name from programvalidation WHERE name ~'\s{2,}'  UNION
    SELECT 'pushanalysis' AS table_name, name from pushanalysis WHERE name ~'\s{2,}'  UNION
    SELECT 'relationshiptype' AS table_name, name from relationshiptype WHERE name ~'\s{2,}'  UNION
    SELECT 'report' AS table_name, name from report WHERE name ~'\s{2,}'  UNION
    SELECT 'reporttable' AS table_name, name from reporttable WHERE name ~'\s{2,}'  UNION
    SELECT 'section' AS table_name, name from section WHERE name ~'\s{2,}'  UNION
    SELECT 'smscommands' AS table_name, name from smscommands WHERE name ~'\s{2,}'  UNION
    SELECT 'smsspecialcharacter' AS table_name, name from smsspecialcharacter WHERE name ~'\s{2,}'  UNION
    SELECT 'sqlview' AS table_name, name from sqlview WHERE name ~'\s{2,}'  UNION
    SELECT 'systemsetting' AS table_name, name from systemsetting WHERE name ~'\s{2,}'  UNION
    SELECT 'tablehook' AS table_name, name from tablehook WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentityattributegroup' AS table_name, name from trackedentityattributegroup WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentityinstancefilter' AS table_name, name from trackedentityinstancefilter WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentityinstancereminder' AS table_name, name from trackedentityinstancereminder WHERE name ~'\s{2,}'  UNION
    SELECT 'trackedentitytype' AS table_name, name from trackedentitytype WHERE name ~'\s{2,}'  UNION
    SELECT 'usergroup' AS table_name, name from usergroup WHERE name ~'\s{2,}'  UNION
    SELECT 'userrole' AS table_name, name from userrole WHERE name ~'\s{2,}'  UNION
    SELECT 'usersetting' AS table_name, name from usersetting WHERE name ~'\s{2,}'  UNION
    SELECT 'validationcriteria' AS table_name, name from validationcriteria WHERE name ~'\s{2,}'  UNION
    SELECT 'validationnotificationtemplate' AS table_name, name from validationnotificationtemplate WHERE name ~'\s{2,}'  UNION
    SELECT 'validationrule' AS table_name, name from validationrule WHERE name ~'\s{2,}'  UNION
    SELECT 'validationrulegroup' AS table_name, name from validationrulegroup WHERE name ~'\s{2,}'
    SELECT table_name,name from names_multiple_spaces
    ORDER BY table_name,name;
  severity: WARNING
  introduction: >
    Identifiable objects with names should not contain leading spaces.
  recommendation: >-
    These objects may be able to be corrected through the user interface of DHIS2. Alternatively,
    they can be corrected directly in the database using SQL. You can use the following SQL as a
    pattern to help you create the exact query which you need:
    - UPDATE categorycombo as a  SET name = b.name_new from ( SELECT categorycomboid,REGEXP_REPLACE(name,'\s{2,}',' ') as
    - name_new from categorycombo where name ~ '\s{2,}') b where a.categorycomboid = b.categorycomboid;

